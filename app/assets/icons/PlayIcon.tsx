import Svg from '~/components/styles/Svg.styles';

const Bold = ({ color }: { color: string }) => (
  <g>
    <path
      d="M17.49 9.59965L5.6 16.7696C4.9 17.1896 4 16.6896 4 15.8696V7.86965C4 4.37965 7.77 2.19965 10.8 3.93965L15.39 6.57965L17.48 7.77965C18.17 8.18965 18.18 9.18965 17.49 9.59965Z"
      fill={color}
    />
    <path
      d="M18.0888 15.4606L14.0388 17.8006L9.99883 20.1306C8.54883 20.9606 6.90883 20.7906 5.71883 19.9506C5.13883 19.5506 5.20883 18.6606 5.81883 18.3006L18.5288 10.6806C19.1288 10.3206 19.9188 10.6606 20.0288 11.3506C20.2788 12.9006 19.6388 14.5706 18.0888 15.4606Z"
      fill={color}
    />
  </g>
);
const Circle1Bold = ({ color }: { color: string }) => (
  <g>
    <path
      d="M11.9688 2C6.44875 2 1.96875 6.48 1.96875 12C1.96875 17.52 6.44875 22 11.9688 22C17.4888 22 21.9688 17.52 21.9688 12C21.9688 6.48 17.4988 2 11.9688 2ZM14.9688 14.23L12.0687 15.9C11.7087 16.11 11.3088 16.21 10.9187 16.21C10.5188 16.21 10.1287 16.11 9.76875 15.9C9.04875 15.48 8.61875 14.74 8.61875 13.9V10.55C8.61875 9.72 9.04875 8.97 9.76875 8.55C10.4888 8.13 11.3487 8.13 12.0787 8.55L14.9787 10.22C15.6987 10.64 16.1287 11.38 16.1287 12.22C16.1287 13.06 15.6987 13.81 14.9688 14.23Z"
      fill={color}
    />
  </g>
);
const Circle2Bold = ({ color }: { color: string }) => (
  <g>
    <path
      d="M19.0717 19.8211C18.8817 19.8211 18.6917 19.7511 18.5417 19.6011C18.2517 19.3111 18.2517 18.8311 18.5417 18.5411C22.1517 14.9311 22.1517 9.06109 18.5417 5.46109C18.2517 5.17109 18.2517 4.69109 18.5417 4.40109C18.8317 4.11109 19.3117 4.11109 19.6017 4.40109C23.7917 8.59109 23.7917 15.4111 19.6017 19.6011C19.4517 19.7511 19.2617 19.8211 19.0717 19.8211Z"
      fill={color}
    />
    <path
      d="M4.93031 19.8211C4.74031 19.8211 4.55031 19.7511 4.40031 19.6011C0.210312 15.4111 0.210312 8.59109 4.40031 4.40109C4.69031 4.11109 5.17031 4.11109 5.46031 4.40109C5.75031 4.69109 5.75031 5.17109 5.46031 5.46109C1.85031 9.07109 1.85031 14.9411 5.46031 18.5411C5.75031 18.8311 5.75031 19.3111 5.46031 19.6011C5.31031 19.7511 5.12031 19.8211 4.93031 19.8211Z"
      fill={color}
    />
    <path
      d="M11.9988 22.7119C10.7488 22.7019 9.55878 22.5019 8.44878 22.1119C8.05878 21.9719 7.84878 21.5419 7.98878 21.1519C8.12878 20.7619 8.54878 20.5519 8.94878 20.6919C9.90878 21.0219 10.9288 21.2019 12.0088 21.2019C13.0788 21.2019 14.1088 21.0219 15.0588 20.6919C15.4488 20.5619 15.8788 20.7619 16.0188 21.1519C16.1588 21.5419 15.9488 21.9719 15.5588 22.1119C14.4388 22.5019 13.2488 22.7119 11.9988 22.7119Z"
      fill={color}
    />
    <path
      d="M15.2988 3.33906C15.2188 3.33906 15.1288 3.32906 15.0488 3.29906C14.0988 2.95906 13.0688 2.78906 11.9988 2.78906C10.9288 2.78906 9.90878 2.96906 8.94878 3.29906C8.54878 3.42906 8.12878 3.22906 7.98878 2.83906C7.84878 2.44906 8.05878 2.01906 8.44878 1.87906C9.56878 1.48906 10.7588 1.28906 11.9988 1.28906C13.2388 1.28906 14.4388 1.48906 15.5488 1.87906C15.9388 2.01906 16.1488 2.44906 16.0088 2.83906C15.8988 3.14906 15.6088 3.33906 15.2988 3.33906Z"
      fill={color}
    />
    <path
      d="M8.73828 12.0001V10.3301C8.73828 8.25014 10.2083 7.40014 12.0083 8.44014L13.4583 9.28014L14.9083 10.1201C16.7083 11.1601 16.7083 12.8601 14.9083 13.9001L13.4583 14.7401L12.0083 15.5801C10.2083 16.6201 8.73828 15.7701 8.73828 13.6901V12.0001Z"
      fill={color}
    />
  </g>
);

const Light = ({ color, strokeWidth }: { color: string; strokeWidth: number }) => (
  <g>
    <path
      d="M4 11.9999V8.43989C4 4.01989 7.13 2.2099 10.96 4.4199L14.05 6.1999L17.14 7.9799C20.97 10.1899 20.97 13.8099 17.14 16.0199L14.05 17.7999L10.96 19.5799C7.13 21.7899 4 19.9799 4 15.5599V11.9999Z"
      stroke={color}
      strokeWidth={strokeWidth}
      strokeMiterlimit="10"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </g>
);

const Circle1Light = ({ color }: { color: string }) => (
  <g>
    <path
      d="M11.9688 22.75C6.04875 22.75 1.21875 17.93 1.21875 12C1.21875 6.07 6.04875 1.25 11.9688 1.25C17.8888 1.25 22.7188 6.07 22.7188 12C22.7188 17.93 17.8988 22.75 11.9688 22.75ZM11.9688 2.75C6.86875 2.75 2.71875 6.9 2.71875 12C2.71875 17.1 6.86875 21.25 11.9688 21.25C17.0688 21.25 21.2188 17.1 21.2188 12C21.2188 6.9 17.0688 2.75 11.9688 2.75Z"
      fill={color}
    />
    <path
      d="M10.5583 16.9915C10.1183 16.9915 9.69828 16.8815 9.32828 16.6715C8.46828 16.1715 7.98828 15.1915 7.98828 13.9115V10.5615C7.98828 9.28146 8.45828 8.30146 9.31828 7.80146C10.1783 7.30146 11.2683 7.38146 12.3783 8.02146L15.2783 9.69146C16.3883 10.3315 16.9983 11.2315 16.9983 12.2315C16.9983 13.2215 16.3883 14.1315 15.2783 14.7715L12.3783 16.4415C11.7583 16.8115 11.1283 16.9915 10.5583 16.9915ZM10.5583 8.97146C10.3783 8.97146 10.2083 9.01146 10.0783 9.09146C9.69828 9.31146 9.48828 9.84146 9.48828 10.5615V13.9115C9.48828 14.6215 9.69828 15.1615 10.0783 15.3715C10.4483 15.5915 11.0183 15.5015 11.6383 15.1515L14.5383 13.4815C15.1583 13.1215 15.5083 12.6715 15.5083 12.2415C15.5083 11.8115 15.1483 11.3615 14.5383 11.0015L11.6383 9.33146C11.2383 9.09146 10.8683 8.97146 10.5583 8.97146Z"
      fill={color}
    />
  </g>
);

const Circle2Light = ({ color }: { color: string }) => (
  <g>
    <path
      d="M19.0678 19.8211C18.8778 19.8211 18.6878 19.751 18.5378 19.601C18.2478 19.311 18.2478 18.831 18.5378 18.541C22.1478 14.931 22.1478 9.06109 18.5378 5.46109C18.2478 5.17109 18.2478 4.69109 18.5378 4.40109C18.8278 4.11109 19.3078 4.11109 19.5978 4.40109C23.7878 8.59109 23.7878 15.411 19.5978 19.601C19.4478 19.751 19.2578 19.8211 19.0678 19.8211Z"
      fill={color}
    />
    <path
      d="M4.93031 19.8211C4.74031 19.8211 4.55031 19.751 4.40031 19.601C0.210312 15.411 0.210312 8.59109 4.40031 4.40109C4.69031 4.11109 5.17031 4.11109 5.46031 4.40109C5.75031 4.69109 5.75031 5.17109 5.46031 5.46109C1.85031 9.07109 1.85031 14.941 5.46031 18.541C5.75031 18.831 5.75031 19.311 5.46031 19.601C5.31031 19.751 5.12031 19.8211 4.93031 19.8211Z"
      fill={color}
    />
    <path
      d="M11.9988 22.7119C10.7488 22.7019 9.5588 22.5019 8.4488 22.1119C8.0588 21.9719 7.84878 21.5419 7.98878 21.1519C8.12878 20.7619 8.5488 20.5519 8.9488 20.6919C9.9088 21.0219 10.9288 21.2019 12.0088 21.2019C13.0788 21.2019 14.1088 21.0219 15.0588 20.6919C15.4488 20.5619 15.8788 20.7619 16.0188 21.1519C16.1588 21.5419 15.9488 21.9719 15.5588 22.1119C14.4388 22.5019 13.2488 22.7119 11.9988 22.7119Z"
      fill={color}
    />
    <path
      d="M15.3009 3.33911C15.2209 3.33911 15.1309 3.32907 15.0509 3.29907C14.0909 2.96907 13.061 2.78906 11.991 2.78906C10.9209 2.78906 9.90096 2.96907 8.94096 3.29907C8.55096 3.42907 8.12097 3.22911 7.98097 2.83911C7.84097 2.44911 8.05096 2.01909 8.44096 1.87909C9.55096 1.48909 10.751 1.28906 11.991 1.28906C13.231 1.28906 14.431 1.48909 15.541 1.87909C15.931 2.01909 16.141 2.44911 16.001 2.83911C15.901 3.14911 15.6109 3.33911 15.3009 3.33911Z"
      fill={color}
    />
    <path
      d="M10.5622 16.761C10.1222 16.761 9.70218 16.651 9.33218 16.441C8.47218 15.941 7.99219 14.961 7.99219 13.681V10.331C7.99219 9.05101 8.46218 8.071 9.33218 7.571C10.1922 7.071 11.2822 7.15097 12.3922 7.79097L15.2922 9.46102C16.4022 10.101 17.0122 11.001 17.0122 12.001C17.0122 13.001 16.4022 13.901 15.2922 14.541L12.3922 16.211C11.7622 16.581 11.1322 16.761 10.5622 16.761ZM10.5622 8.74098C10.3822 8.74098 10.2122 8.78098 10.0822 8.86098C9.71218 9.08098 9.49219 9.611 9.49219 10.321V13.671C9.49219 14.381 9.70218 14.921 10.0822 15.131C10.4522 15.341 11.0222 15.261 11.6422 14.911L14.5422 13.241C15.1622 12.881 15.5122 12.431 15.5122 12.001C15.5122 11.571 15.1622 11.121 14.5422 10.761L11.6422 9.09102C11.2422 8.86102 10.8722 8.74098 10.5622 8.74098Z"
      fill={color}
    />
  </g>
);

interface IPlayProps {
  /**
   * The color of the icon
   * @default 'currentColor'
   */
  fill?: string;
  /**
   * The fill of the icon
   * @default false
   * @type boolean
   */
  filled?: boolean;
  /**
   * The type of the icon
   * @default 'normal'
   * @type 'normal' | 'circle1' | 'circle2'
   */
  type?: 'normal' | 'circle1' | 'circle2';
  /**
   * The size of the icon
   * @default 24
   * @type number
   */
  size?: number;
  /**
   * The height of the icon
   * @default 24
   * @type number
   */
  height?: number;
  /**
   * The width of the icon
   * @default 24
   * @type number
   * */
  width?: number;
}

const Play = ({
  fill = 'currentColor',
  filled = false,
  type = 'normal',
  size = 24,
  height = 24,
  width = 24,
  ...props
}: IPlayProps) => {
  switch (type) {
    case 'normal':
      if (filled) {
        return (
          <Svg
            className=""
            width={width || size}
            height={height || size}
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            css={{
              display: 'inline',
            }}
            {...props}
          >
            <Bold color={fill} />
          </Svg>
        );
      }
      return (
        <Svg
          className=""
          width={width || size}
          height={height || size}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
          css={{
            display: 'inline',
          }}
          {...props}
        >
          <Light color={fill} strokeWidth={1.5} />
        </Svg>
      );
    case 'circle1':
      if (filled) {
        return (
          <Svg
            className=""
            width={width || size}
            height={height || size}
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            css={{
              display: 'inline',
            }}
            {...props}
          >
            <Circle1Bold color={fill} />
          </Svg>
        );
      }
      return (
        <Svg
          className=""
          width={width || size}
          height={height || size}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
          css={{
            display: 'inline',
          }}
          {...props}
        >
          <Circle1Light color={fill} />
        </Svg>
      );
    case 'circle2':
      if (filled) {
        return (
          <Svg
            className=""
            width={width || size}
            height={height || size}
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            css={{
              display: 'inline',
            }}
            {...props}
          >
            <Circle2Bold color={fill} />
          </Svg>
        );
      }
      return (
        <Svg
          className=""
          width={width || size}
          height={height || size}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
          css={{
            display: 'inline',
          }}
          {...props}
        >
          <Circle2Light color={fill} />
        </Svg>
      );
    default:
      if (filled) {
        return (
          <Svg
            className=""
            width={width || size}
            height={height || size}
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            css={{
              display: 'inline',
            }}
            {...props}
          >
            <Bold color={fill} />
          </Svg>
        );
      }
      return (
        <Svg
          className=""
          width={width || size}
          height={height || size}
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
          css={{
            display: 'inline',
          }}
          {...props}
        >
          <Light color={fill} strokeWidth={1.5} />
        </Svg>
      );
  }
};

Play.displayName = 'PlayIcon';

export default Play;
